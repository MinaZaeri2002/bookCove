# Generated by Django 5.2.3 on 2025-06-26 14:49

import django.contrib.auth.models
import django.contrib.auth.validators
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='ایمیل')),
                ('phone_number', models.CharField(blank=True, max_length=11, null=True, verbose_name='شماره تلفن')),
                ('bio', models.TextField(blank=True, max_length=500, null=True, verbose_name='درباره من')),
                ('profile_picture', models.ImageField(default='profile_pics/default.jpg', upload_to='profile_pics/', verbose_name='عکس پروفایل')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='تاریخ تولد')),
                ('profile_is_public', models.BooleanField(default=True, verbose_name='نمایش پروفایل')),
                ('show_email', models.BooleanField(default=False, verbose_name='نمایش ایمیل')),
                ('books_read_count', models.PositiveIntegerField(default=0, verbose_name='تعداد کتاب\u200cهای خوانده شده')),
                ('reviews_count', models.PositiveIntegerField(default=0, verbose_name='تعداد نقدهای نوشته شده')),
                ('yearly_reading_goal', models.PositiveIntegerField(default=12, verbose_name='هدف مطالعه سالانه')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاریخ عضویت')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='آخرین بروزرسانی')),
                ('website', models.URLField(blank=True, null=True, verbose_name='وبسایت')),
                ('instagram', models.CharField(blank=True, max_length=50, null=True, verbose_name='اینستاگرام')),
                ('telegram', models.CharField(blank=True, max_length=50, null=True, verbose_name='تلگرام')),
            ],
            options={
                'verbose_name': 'کاربر',
                'verbose_name_plural': 'کاربران',
                'ordering': ['-created_at'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
